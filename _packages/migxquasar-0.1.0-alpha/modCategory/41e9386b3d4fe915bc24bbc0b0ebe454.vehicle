<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      'd6d6feeeb4680e45b92fc5e0c6c0338a' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"migxquasar_app","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<script>\\n    \\/\\/ start the UI; assumes you have a <div id=\\"q-app\\"><\\/div> in your <body>\\n    new window.Vue({\\n      el: \'#q-app\',\\n      methods: {\\n        loadAllFields(){\\n          this.loadFields({\\"returntype\\":\\"resourcefields\\"});\\n          this.loadFields({\\"returntype\\":\\"tvs\\"});\\n          this.loadFields({\\"returntype\\":\\"migxitems\\"});                    \\n        },\\n        loadFields(params){\\n            var params = params || {};\\n            var self = this;\\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources\';\\n            params[\'gattung\'] = \'Fuhrpark\';\\n            axios.get(ajaxUrl,{params:params})\\n            .then(function (response) {\\n                self.$set(self.fahrten,params.returntype,response.data.results);\\n                \\/\\/make sure, the model gets updated, nested properties, which are not defined in the data, are not watched\\n                \\/\\/self.$forceUpdate();\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });            \\n        },\\n        saveResource(){\\n            var self = this;\\n            var data = this.resourcevalues;\\n\\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources\';\\n            axios.put(ajaxUrl,data)\\n            .then(function (response) {\\n                self.loadResourcelist();\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });                \\n            \\n        },\\n        \\n        loadResource(id){\\n            var self = this;\\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources\\/\' + id;\\n            axios.get(ajaxUrl)\\n            .then(function (response) {\\n                self.resourcevalues = response.data.object;\\n                self.getForm();\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });            \\n        },        \\n        \\n        loadResourcelist(){\\n            var self = this;\\n            \\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources?limit=100000\';\\n            axios.get(ajaxUrl)\\n            .then(function (response) {\\n                self.resourcelist = response.data.results;\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });            \\n        },\\n    onChange(value,field,index) {\\n        if (typeof field != \'undefined\'){\\n            this.resourcevalues[field][index] = value\\n            this.$forceUpdate();\\n        } else {\\n            this.resourcevalues = value;    \\n        }\\n    },        \\n    getUiSchemaFromAPI() {\\n            var params = params || {};\\n            var self = this;\\n            var ajaxUrl = \'\\/assets\\/components\\/migxquasar\\/rest\\/Fields\';\\n            params[\'gattung\'] = \'Fuhrpark\';\\n            return axios.get(ajaxUrl,{params:params})\\n            .then(function (response) {\\n                \\/\\/self.$set(self.fahrten,params.returntype,response.data.results);\\n                \\/\\/make sure, the model gets updated, nested properties, which are not defined in the data, are not watched\\n                \\/\\/self.$forceUpdate();\\n                return response.data.results;\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });         \\n\\n    },\\n    getSchemaFromAPI() {\\n      return new Promise((resolve, reject) => {\\n        setTimeout(() => {\\n          resolve({\\n            type: \'object\',\\n            required: [\'firstName\'],\\n            properties: {\\n              firstName: {\\n                type: \'string\',\\n              },\\n            },\\n          });\\n        }, this.delay);\\n      });\\n    },\\n    getDataFromAPI() {\\n      return new Promise((resolve, reject) => {\\n        setTimeout(() => {\\n          resolve({\\n            firstName: \'Tobias\',\\n          });\\n        }, this.delay);\\n      });\\n    },\\n    getForm() {\\n      \\/\\/ Reset properties\\n      this.uiSchema = [];\\n      \\/\\/this.schema = [];\\n      \\/\\/this.model = [];\\n\\n      \\/\\/ Set form as not loaded\\n      this.loaded = false;\\n\\n      \\/\\/ Get the data from the API\\n      return Promise.all([\\n        this.getUiSchemaFromAPI(),\\n        \\/\\/this.getSchemaFromAPI(),\\n        \\/\\/this.getDataFromAPI(),\\n      ]).then(([uiSchema, schema, model]) => {\\n        \\/\\/ Update the form properties with data from the API\\n        this.uiSchema = uiSchema;\\n        \\/\\/this.schema = schema;\\n        \\/\\/this.model = model;\\n\\n        \\/\\/ Set form as loaded\\n        this.loaded = true;\\n      });\\n    },        \\n\\n          \\n      },\\n      \\n      data() {\\n          return {\\n              loaded: false,\\n              schema: {\\n            type: \'object\',\\n            required: [\'pagetitle\'],\\n            properties: {\\n              pagetitle: {\\n                type: \'string\',\\n              },\\n            },\\n          },\\n              uiSchema: [],\\n              resourcelist:[],\\n              drawerLeft: false,\\n              resourcevalues:{\\"pagetitle\\":\\"[[*pagetitle]]\\"},\\n\\n              migx1_fields: [\\n                  {\\n                      field:\'title\',\\n                      label:\'Title\',\\n                      type:\'text\'\\n                  },\\n                  {\\n                      field:\'text\',\\n                      label: \'Text\',\\n                      type:\'textarea\'\\n                  }                 \\n              ],              \\n              resourcetvs: [\\n                  {\\n                      field:\'tv_scripts\',\\n                      label:\'Scripts\',\\n                      type:\'textarea\'\\n                  }                \\n              ],\\n              resourcefields: [\\n                  {\\n                      field:\'pagetitle\',\\n                      label:\'Pagetitle\',\\n                      type:\'text\'\\n                  },\\n                  {\\n                      field:\'introtext\',\\n                      label:\'Introtext\',\\n                      type:\'textarea\'\\n                  },                  \\n                  {\\n                      field:\'content\',\\n                      label: \'Content\',\\n                      type:\'richtext\'\\n                  }                 \\n              ],              \\n              current_tab: \'resourcefields\',\\n          }          \\n      },\\n      mounted: function () {\\n          this.loadResourcelist();\\n      }           \\n    })\\n<\\/script>  ","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<script>\\n    \\/\\/ start the UI; assumes you have a <div id=\\"q-app\\"><\\/div> in your <body>\\n    new window.Vue({\\n      el: \'#q-app\',\\n      methods: {\\n        loadAllFields(){\\n          this.loadFields({\\"returntype\\":\\"resourcefields\\"});\\n          this.loadFields({\\"returntype\\":\\"tvs\\"});\\n          this.loadFields({\\"returntype\\":\\"migxitems\\"});                    \\n        },\\n        loadFields(params){\\n            var params = params || {};\\n            var self = this;\\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources\';\\n            params[\'gattung\'] = \'Fuhrpark\';\\n            axios.get(ajaxUrl,{params:params})\\n            .then(function (response) {\\n                self.$set(self.fahrten,params.returntype,response.data.results);\\n                \\/\\/make sure, the model gets updated, nested properties, which are not defined in the data, are not watched\\n                \\/\\/self.$forceUpdate();\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });            \\n        },\\n        saveResource(){\\n            var self = this;\\n            var data = this.resourcevalues;\\n\\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources\';\\n            axios.put(ajaxUrl,data)\\n            .then(function (response) {\\n                self.loadResourcelist();\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });                \\n            \\n        },\\n        \\n        loadResource(id){\\n            var self = this;\\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources\\/\' + id;\\n            axios.get(ajaxUrl)\\n            .then(function (response) {\\n                self.resourcevalues = response.data.object;\\n                self.getForm();\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });            \\n        },        \\n        \\n        loadResourcelist(){\\n            var self = this;\\n            \\n            var ajaxUrl = \'[[++assets_url]]components\\/migxquasar\\/rest\\/Resources?limit=100000\';\\n            axios.get(ajaxUrl)\\n            .then(function (response) {\\n                self.resourcelist = response.data.results;\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });            \\n        },\\n    onChange(value,field,index) {\\n        if (typeof field != \'undefined\'){\\n            this.resourcevalues[field][index] = value\\n            this.$forceUpdate();\\n        } else {\\n            this.resourcevalues = value;    \\n        }\\n    },        \\n    getUiSchemaFromAPI() {\\n            var params = params || {};\\n            var self = this;\\n            var ajaxUrl = \'\\/assets\\/components\\/migxquasar\\/rest\\/Fields\';\\n            params[\'gattung\'] = \'Fuhrpark\';\\n            return axios.get(ajaxUrl,{params:params})\\n            .then(function (response) {\\n                \\/\\/self.$set(self.fahrten,params.returntype,response.data.results);\\n                \\/\\/make sure, the model gets updated, nested properties, which are not defined in the data, are not watched\\n                \\/\\/self.$forceUpdate();\\n                return response.data.results;\\n            })\\n            .catch(function (error) {\\n                console.log(error);\\n            });         \\n\\n    },\\n    getSchemaFromAPI() {\\n      return new Promise((resolve, reject) => {\\n        setTimeout(() => {\\n          resolve({\\n            type: \'object\',\\n            required: [\'firstName\'],\\n            properties: {\\n              firstName: {\\n                type: \'string\',\\n              },\\n            },\\n          });\\n        }, this.delay);\\n      });\\n    },\\n    getDataFromAPI() {\\n      return new Promise((resolve, reject) => {\\n        setTimeout(() => {\\n          resolve({\\n            firstName: \'Tobias\',\\n          });\\n        }, this.delay);\\n      });\\n    },\\n    getForm() {\\n      \\/\\/ Reset properties\\n      this.uiSchema = [];\\n      \\/\\/this.schema = [];\\n      \\/\\/this.model = [];\\n\\n      \\/\\/ Set form as not loaded\\n      this.loaded = false;\\n\\n      \\/\\/ Get the data from the API\\n      return Promise.all([\\n        this.getUiSchemaFromAPI(),\\n        \\/\\/this.getSchemaFromAPI(),\\n        \\/\\/this.getDataFromAPI(),\\n      ]).then(([uiSchema, schema, model]) => {\\n        \\/\\/ Update the form properties with data from the API\\n        this.uiSchema = uiSchema;\\n        \\/\\/this.schema = schema;\\n        \\/\\/this.model = model;\\n\\n        \\/\\/ Set form as loaded\\n        this.loaded = true;\\n      });\\n    },        \\n\\n          \\n      },\\n      \\n      data() {\\n          return {\\n              loaded: false,\\n              schema: {\\n            type: \'object\',\\n            required: [\'pagetitle\'],\\n            properties: {\\n              pagetitle: {\\n                type: \'string\',\\n              },\\n            },\\n          },\\n              uiSchema: [],\\n              resourcelist:[],\\n              drawerLeft: false,\\n              resourcevalues:{\\"pagetitle\\":\\"[[*pagetitle]]\\"},\\n\\n              migx1_fields: [\\n                  {\\n                      field:\'title\',\\n                      label:\'Title\',\\n                      type:\'text\'\\n                  },\\n                  {\\n                      field:\'text\',\\n                      label: \'Text\',\\n                      type:\'textarea\'\\n                  }                 \\n              ],              \\n              resourcetvs: [\\n                  {\\n                      field:\'tv_scripts\',\\n                      label:\'Scripts\',\\n                      type:\'textarea\'\\n                  }                \\n              ],\\n              resourcefields: [\\n                  {\\n                      field:\'pagetitle\',\\n                      label:\'Pagetitle\',\\n                      type:\'text\'\\n                  },\\n                  {\\n                      field:\'introtext\',\\n                      label:\'Introtext\',\\n                      type:\'textarea\'\\n                  },                  \\n                  {\\n                      field:\'content\',\\n                      label: \'Content\',\\n                      type:\'richtext\'\\n                  }                 \\n              ],              \\n              current_tab: \'resourcefields\',\\n          }          \\n      },\\n      mounted: function () {\\n          this.loadResourcelist();\\n      }           \\n    })\\n<\\/script>  "}',
        'guid' => '6ccc8a06ab8e5e7302bdbefceae0ec3f',
        'native_key' => NULL,
        'signature' => '6d6f1bffb06b1875afffeb312bc8644f',
      ),
      '0ab0950d7e32dc4daaa4751f04fb8e29' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"migxquasar_resourcelist","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"78,40,60,6,109,100,82","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"78,40,60,6,109,100,82"}',
        'guid' => 'c75015bafa85aa916e06216f1ef39095',
        'native_key' => NULL,
        'signature' => '8a8006330fb9b10553b49df086c4c75a',
      ),
      '5cee20fa513e34408456e494196b0bb7' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"migxquasar_tvlist","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"migx_contentblocks,scripts","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"migx_contentblocks,scripts"}',
        'guid' => '6190cff6ee08cadf0f17447e0878194f',
        'native_key' => NULL,
        'signature' => '38d45a8b32b9452fcf3263d9beb5483e',
      ),
    ),
    'Templates' => 
    array (
      'fcf2af5441f21cd8b52d1f563f22f4b4' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'templatename',
        'class' => 'modTemplate',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"templatename":"migxquasar","description":"","editor_type":0,"category":0,"icon":"","template_type":0,"content":"<!DOCTYPE html>\\n<html lang=\\"de\\">\\n<head>\\n  <meta charset=\\"UTF-8\\">\\n    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\n    <meta name=\\"description\\" content=\\"\\">\\n    <meta name=\\"author\\" content=\\"\\">\\n    \\n    <title>[[++site_name]] - [[+pagetitle]]<\\/title>\\n    <base href=\\"[[!++site_url]]\\" \\/>    \\n    \\n    <link rel=\\"shortcut icon\\" href=\\"\\/assets\\/ico\\/favicon.ico\\">\\n    \\n  <!-- Do you need Material Icons? -->\\n  <link href=\\"https:\\/\\/fonts.googleapis.com\\/css?family=Roboto:100,300,400,500,700,900|Material+Icons\\" rel=\\"stylesheet\\" type=\\"text\\/css\\">\\n\\n  <!-- Do you need Fontawesome? -->\\n  <link href=\\"https:\\/\\/use.fontawesome.com\\/releases\\/v5.0.13\\/css\\/all.css\\" rel=\\"stylesheet\\">\\n\\n  <!-- Do you need Ionicons? -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/ionicons@^4.0.0\\/dist\\/css\\/ionicons.min.css\\" rel=\\"stylesheet\\">\\n\\n  <!-- Do you need MDI? -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/@mdi\\/font@^3.0.0\\/css\\/materialdesignicons.min.css\\" rel=\\"stylesheet\\">\\n\\n  <!-- Do you need all animations? -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/animate.css@^3.5.2\\/animate.min.css\\" rel=\\"stylesheet\\">\\n\\n\\n  <!--\\n    Finally, add Quasar\'s CSS:\\n    Replace version below (1.0.3) with your desired version of Quasar.\\n    Add \\".rtl\\" for the RTL support (example: quasar.rtl.min.css).\\n  -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/quasar.min.css\\" rel=\\"stylesheet\\" type=\\"text\\/css\\">\\n  \\n\\n\\n<\\/head>\\n\\n<body>\\n    \\n<div id=\\"q-app\\" class=\\"\\">  \\n\\n<div class=\\"row justify-center\\">\\n  <q-layout container view=\\"lhh LpR lff\\" class=\\"shadow-3 rounded-borders \\" style=\\"max-width:1000px; height:calc(100vh - 20px); margin-top:10px;\\" >\\n      <q-header reveal class=\\"bg-black\\">\\n        <q-toolbar>\\n          <q-btn flat @click=\\"drawerLeft = !drawerLeft\\" round dense icon=\\"menu\\" \\/>\\n         <\\/q-toolbar>\\n      <\\/q-header>      \\n      \\n    <q-drawer v-model=\\"drawerLeft\\" show-if-above :width=\\"200\\" :breakpoint=\\"700\\" elevated content-class=\\"\\">\\n      <q-scroll-area class=\\"fit\\">\\n        <q-list bordered separator>\\n          <template v-for=\\"resource in resourcelist\\" :key=\\"resource.id\\">        \\n            <q-item clickable v-ripple @click=\\"loadResource(resource.id)\\">\\n              <q-item-section>{{resource.pagetitle}}<\\/q-item-section>\\n            <\\/q-item>\\n          <\\/template> \\n        <\\/q-list>\\n      <\\/q-scroll-area>\\n    <\\/q-drawer>\\n\\n    <q-page-container>\\n      <div class=\\"bg-grey-2 q-pa-md rounded-borders\\">    \\n        <div class=\\"page-header\\">\\n          <h2>{{resourcevalues.pagetitle}}<\\/h2>\\n        <\\/div> \\n        \\n        <q-btn label=\\"Save\\" color=\\"primary\\" @click=\\"saveResource();\\" ><\\/q-btn>\\n\\n<div class=\\"q-gutter-md\\">\\n\\n<q-tabs v-model=\\"current_tab\\" align=\\"left\\">\\n    <q-tab name=\\"resourcefields\\" label=\\"Resource Fields\\"><\\/q-tab>\\n    <q-tab name=\\"tvs\\" label=\\"TVs\\"><\\/q-tab>\\n    <q-tab name=\\"migx_1\\" label=\\"MIGX 1\\"><\\/q-tab>\\n<\\/q-tabs>\\n\\n<q-tab-panels v-model=\\"current_tab\\" animated>\\n  <q-tab-panel name=\\"resourcefields\\" class=\\"q-gutter-md\\">\\n    <div class=\\"text-h4 q-mb-md\\">Resource Fields<\\/div>      \\n      <template v-for=\\"field in resourcefields\\">\\n          <template v-if=\\"field.type == \'richtext\'\\">\\n            <q-field outlined v-bind:label=\\"field.label\\" stack-label >\\n              <template v-slot:control>    \\n              <q-editor v-model=\\"resourcevalues[field.field]\\" bg-color=\\"white\\" class=\\"full-width\\" > <\\/q-editor>\\n              <\\/template>              \\n            <\\/q-field>\\n            <q-input outlined v-model=\\"resourcevalues[field.field]\\" v-bind:label=\\"field.label\\" type=\\"textarea\\" bg-color=\\"white\\" > <\\/q-input>\\n          <\\/template>\\n          <template v-else-if=\\"field.type == \'text\'\\">\\n            <q-input outlined v-model=\\"resourcevalues[field.field]\\" v-bind:label=\\"field.label\\" type=\\"text\\" bg-color=\\"white\\" > <\\/q-input>\\n          <\\/template>\\n          <template v-else-if=\\"field.type == \'textarea\'\\">\\n            <q-input outlined v-model=\\"resourcevalues[field.field]\\" v-bind:label=\\"field.label\\" type=\\"textarea\\" bg-color=\\"white\\" > <\\/q-input>\\n          <\\/template>  \\n      <\\/template>\\n  <\\/q-tab-panel>\\n  <q-tab-panel name=\\"tvs\\" class=\\"q-gutter-md\\">\\n<div class=\\"text-h4 q-mb-md\\">TVs<\\/div>\\n  <template v-for=\\"field in resourcetvs\\">\\n    <q-input outlined v-model=\\"resourcevalues[field.field]\\" v-bind:label=\\"field.label\\" v-bind:type=\\"field.type\\" bg-color=\\"white\\" > <\\/q-input>\\n  <\\/template>\\n<\\/q-tab-panel> class=\\"q-gutter-md\\"\\n\\n  <q-tab-panel name=\\"migx_1\\" class=\\"q-gutter-md\\">\\n    <div class=\\"text-h4 q-mb-md\\">MIGX 1<\\/div>      \\n    <template v-for=\\"record in resourcevalues.tv_migx_contentblocks\\">\\n      <template v-for=\\"field in migx1_fields\\">\\n        <q-input outlined v-model=\\"record[field.field]\\" v-bind:label=\\"field.label\\" v-bind:type=\\"field.type\\" bg-color=\\"white\\" > <\\/q-input>\\n      <\\/template>\\n      <q-separator><\\/q-separator>\\n    <\\/template>\\n  <\\/q-tab-panel> \\n<\\/q-tab-panels>\\n\\n<\\/div>\\n    \\n      <\\/div>        \\n    <\\/q-page-container>\\n    \\n  <\\/q-layout> \\n  <\\/div>\\n<\\/div>\\n\\n\\n  <!-- Do you want IE support? Replace \\"1.0.3\\" with your desired Quasar version -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/quasar.ie.polyfills.umd.min.js\\"><\\/script>\\n\\n  <!-- You need Vue too -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/vue@latest\\/dist\\/vue.min.js\\"><\\/script>\\n  <script src=\\"https:\\/\\/unpkg.com\\/vue-router\\/dist\\/vue-router.js\\"><\\/script>\\n\\n  <!--\\n    Add Quasar\'s JS:\\n    Replace version below (1.0.3) with your desired version of Quasar.\\n  -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/quasar.umd.min.js\\"><\\/script>\\n\\n  <!--\\n    If you want to add a Quasar Language pack (other than \\"en-us\\").\\n    Notice \\"pt-br\\" in \\"i18n.pt-br.umd.min.js\\" for Brazilian Portuguese language pack.\\n    Replace version below (1.0.0-beta.0) with your desired version of Quasar.\\n    Also check final <script> tag below to enable the language\\n    Language pack list: https:\\/\\/github.com\\/quasarframework\\/quasar\\/tree\\/dev\\/ui\\/lang\\n  -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/lang\\/de.umd.min.js\\"><\\/script>\\n\\n  <!--\\n    If you want to make Quasar components (not your own) use a specific set of icons (unless you\'re using Material Icons already).\\n    Replace version below (1.0.3) with your desired version of Quasar.\\n    Icon sets list: https:\\/\\/github.com\\/quasarframework\\/quasar\\/tree\\/dev\\/ui\\/icon-set\\n  -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/icon-set\\/fontawesome-v5.umd.min.js\\"><\\/script>\\n  \\n  <script src=\\"https:\\/\\/unpkg.com\\/axios\\/dist\\/axios.min.js\\"><\\/script>\\n\\n  <script>\\n  \\n\\n    \\/\\/ if using a Quasar language pack other than the default \\"en-us\\";\\n    \\/\\/ requires the language pack style tag from above\\n    Quasar.lang.set(Quasar.lang.de) \\/\\/ notice camel-case \\"ptBr\\"\\n\\n    \\/\\/ if you want Quasar components to use a specific icon library\\n    \\/\\/ other than the default Material Icons;\\n    \\/\\/ requires the icon set style tag from above\\n    Quasar.iconSet.set(Quasar.iconSet.fontawesomeV5) \\/\\/ fontawesomeV5 is just an example\\n\\n    \\/*\\n      Example kicking off the UI.\\n      Obviously, adapt this to your specific needs.\\n     *\\/\\n  <\\/script>\\n  \\n[[$dimmy_app]]\\n\\n\\n<\\/body>\\n<\\/html>","locked":0,"properties":"a:0:{}","static":0,"static_file":""}',
        'guid' => '3573e5a9e1885359b2baa103a5997451',
        'native_key' => NULL,
        'signature' => '084ac64527738f3de9e0abfe4aed57a2',
      ),
      '423ad508cb45031b3f2b120dbad320f2' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'templatename',
        'class' => 'modTemplate',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"templatename":"migxquasar2","description":"","editor_type":0,"category":0,"icon":"","template_type":0,"content":"<!DOCTYPE html>\\n<html lang=\\"de\\">\\n<head>\\n  <meta charset=\\"UTF-8\\">\\n    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\n    <meta name=\\"description\\" content=\\"\\">\\n    <meta name=\\"author\\" content=\\"\\">\\n    \\n    <title>[[++site_name]] - [[+pagetitle]]<\\/title>\\n    <base href=\\"[[!++site_url]]\\" \\/>    \\n    \\n    <link rel=\\"shortcut icon\\" href=\\"\\/assets\\/ico\\/favicon.ico\\">\\n    \\n  <!-- Do you need Material Icons? -->\\n  <link href=\\"https:\\/\\/fonts.googleapis.com\\/css?family=Roboto:100,300,400,500,700,900|Material+Icons\\" rel=\\"stylesheet\\" type=\\"text\\/css\\">\\n\\n  <!-- Do you need Fontawesome? -->\\n  <link href=\\"https:\\/\\/use.fontawesome.com\\/releases\\/v5.0.13\\/css\\/all.css\\" rel=\\"stylesheet\\">\\n\\n  <!-- Do you need Ionicons? -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/ionicons@^4.0.0\\/dist\\/css\\/ionicons.min.css\\" rel=\\"stylesheet\\">\\n\\n  <!-- Do you need MDI? -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/@mdi\\/font@^3.0.0\\/css\\/materialdesignicons.min.css\\" rel=\\"stylesheet\\">\\n\\n  <!-- Do you need all animations? -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/animate.css@^3.5.2\\/animate.min.css\\" rel=\\"stylesheet\\">\\n\\n\\n  <!--\\n    Finally, add Quasar\'s CSS:\\n    Replace version below (1.0.3) with your desired version of Quasar.\\n    Add \\".rtl\\" for the RTL support (example: quasar.rtl.min.css).\\n  -->\\n  <link href=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/quasar.min.css\\" rel=\\"stylesheet\\" type=\\"text\\/css\\">\\n  \\n\\n\\n<\\/head>\\n\\n<body>\\n    \\n<div id=\\"q-app\\" class=\\"\\">  \\n\\n<div class=\\"row justify-center\\">\\n  <q-layout container view=\\"lhh LpR lff\\" class=\\"shadow-3 rounded-borders \\" style=\\"max-width:1000px; height:calc(100vh - 20px); margin-top:10px;\\" >\\n      <q-header reveal class=\\"bg-black\\">\\n        <q-toolbar>\\n          <q-btn flat @click=\\"drawerLeft = !drawerLeft\\" round dense icon=\\"menu\\" \\/>\\n         <\\/q-toolbar>\\n      <\\/q-header>      \\n      \\n    <q-drawer v-model=\\"drawerLeft\\" show-if-above :width=\\"200\\" :breakpoint=\\"700\\" elevated content-class=\\"\\">\\n      <q-scroll-area class=\\"fit\\">\\n        <q-list bordered separator>\\n          <template v-for=\\"resource in resourcelist\\" :key=\\"resource.id\\">        \\n            <q-item clickable v-ripple @click=\\"loadResource(resource.id)\\">\\n              <q-item-section>{{resource.pagetitle}}<\\/q-item-section>\\n            <\\/q-item>\\n          <\\/template> \\n        <\\/q-list>\\n      <\\/q-scroll-area>\\n    <\\/q-drawer>\\n\\n    <q-page-container>\\n      <div class=\\"bg-grey-2 q-pa-md rounded-borders\\">    \\n        <div class=\\"page-header\\">\\n          <h2>{{resourcevalues.pagetitle}}<\\/h2>\\n        <\\/div> \\n        \\n        <q-btn label=\\"Save\\" color=\\"primary\\" @click=\\"saveResource();\\" ><\\/q-btn\\n        \\n        <div class=\\"q-gutter-md\\">\\n        \\n<q-tabs v-model=\\"current_tab\\" align=\\"left\\">\\n    <q-tab v-for=\\"(formtab,tabname) in uiSchema\\" v-bind:name=\\"tabname\\" v-bind:label=\\"formtab.label\\"><\\/q-tab>\\n<\\/q-tabs>        \\n\\n<q-tab-panels v-model=\\"current_tab\\" animated>\\n  <template v-for=\\"(formtab,tabname) in uiSchema\\">\\n  <q-tab-panel v-bind:name=\\"tabname\\" class=\\"q-gutter-md\\">  \\n    <template v-if=\\"formtab.type == \'formrepeater\'\\">\\n        <template v-for=\\"(record,index) in resourcevalues[formtab.field]\\">\\n            \\n    <vue-form-json-schema\\n      \\n      :model=\\"record\\"\\n      :schema=\\"schema\\"\\n      :ui-schema=\\"formtab.ui\\"\\n      v-on:change=function(value){onChange(value,formtab.field,index)}\\n      xxv-on:state-change=\\"onChangeState\\"\\n      xxv-on:validated=\\"onValidated\\"\\n      class=\\"q-gutter-md\\"\\n    >\\n    <\\/vue-form-json-schema> \\n    <q-separator><\\/q-separator>\\n    \\n        <\\/template>\\n      \\n    <\\/template>\\n    <template v-else>\\n    \\n    <vue-form-json-schema\\n      \\n      :model=\\"resourcevalues\\"\\n      :schema=\\"schema\\"\\n      :ui-schema=\\"formtab.ui\\"\\n      v-on:change=\\"onChange\\"\\n      xxv-on:state-change=\\"onChangeState\\"\\n      xxv-on:validated=\\"onValidated\\"\\n      class=\\"q-gutter-md\\"\\n    >\\n    <\\/vue-form-json-schema>    \\n    \\n    <\\/template>\\n\\n      \\n  <\\/q-tab-panel>\\n  <\\/template>\\n<\\/q-tab-panels>\\n        \\n<\\/div> \\n      <\\/div>        \\n    <\\/q-page-container>\\n    \\n  <\\/q-layout> \\n  <\\/div>\\n<\\/div>\\n\\n\\n  <!-- Do you want IE support? Replace \\"1.0.3\\" with your desired Quasar version -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/quasar.ie.polyfills.umd.min.js\\"><\\/script>\\n\\n  <!-- You need Vue too -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/vue@latest\\/dist\\/vue.min.js\\"><\\/script>\\n  <script src=\\"https:\\/\\/unpkg.com\\/vue-router\\/dist\\/vue-router.js\\"><\\/script>\\n\\n  <!--\\n    Add Quasar\'s JS:\\n    Replace version below (1.0.3) with your desired version of Quasar.\\n  -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/quasar.umd.min.js\\"><\\/script>\\n\\n  <!--\\n    If you want to add a Quasar Language pack (other than \\"en-us\\").\\n    Notice \\"pt-br\\" in \\"i18n.pt-br.umd.min.js\\" for Brazilian Portuguese language pack.\\n    Replace version below (1.0.0-beta.0) with your desired version of Quasar.\\n    Also check final <script> tag below to enable the language\\n    Language pack list: https:\\/\\/github.com\\/quasarframework\\/quasar\\/tree\\/dev\\/ui\\/lang\\n  -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/lang\\/de.umd.min.js\\"><\\/script>\\n\\n  <!--\\n    If you want to make Quasar components (not your own) use a specific set of icons (unless you\'re using Material Icons already).\\n    Replace version below (1.0.3) with your desired version of Quasar.\\n    Icon sets list: https:\\/\\/github.com\\/quasarframework\\/quasar\\/tree\\/dev\\/ui\\/icon-set\\n  -->\\n  <script src=\\"https:\\/\\/cdn.jsdelivr.net\\/npm\\/quasar@^1.9.16\\/dist\\/icon-set\\/fontawesome-v5.umd.min.js\\"><\\/script>\\n  \\n  <script src=\\"https:\\/\\/unpkg.com\\/vue-form-json-schema@latest\\/dist\\/vue-form-json-schema.umd.js\\"><\\/script>\\n  \\n  <script src=\\"https:\\/\\/unpkg.com\\/axios\\/dist\\/axios.min.js\\"><\\/script>\\n\\n  <script>\\n  \\n\\n    \\/\\/ if using a Quasar language pack other than the default \\"en-us\\";\\n    \\/\\/ requires the language pack style tag from above\\n    Quasar.lang.set(Quasar.lang.de) \\/\\/ notice camel-case \\"ptBr\\"\\n\\n    \\/\\/ if you want Quasar components to use a specific icon library\\n    \\/\\/ other than the default Material Icons;\\n    \\/\\/ requires the icon set style tag from above\\n    Quasar.iconSet.set(Quasar.iconSet.fontawesomeV5) \\/\\/ fontawesomeV5 is just an example\\n\\n    \\/*\\n      Example kicking off the UI.\\n      Obviously, adapt this to your specific needs.\\n     *\\/\\n  <\\/script>\\n  \\n[[$migxquasar_app]]\\n\\n\\n<\\/body>\\n<\\/html>","locked":0,"properties":"a:0:{}","static":0,"static_file":""}',
        'guid' => 'c0bcda83d8d08f56a59a40904101d298',
        'native_key' => NULL,
        'signature' => 'f323d5212a566657ac7e4141ba92e03e',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'migxquasar',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"migxquasar-0.1.0-alpha\\/modCategory\\/41e9386b3d4fe915bc24bbc0b0ebe454\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"migxquasar"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"migxquasar-0.1.0-alpha\\/modCategory\\/41e9386b3d4fe915bc24bbc0b0ebe454\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"migxquasar"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'fee06841e6d336fa2b2a4006eb41e651',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '41e9386b3d4fe915bc24bbc0b0ebe454',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"migxquasar","rank":0}',
);